
from itertools import chain, combinations

def powerset(iterable):
  xs = list(iterable)
  # note we return an iterator rather than a list
  return chain.from_iterable( combinations(xs,n) for n in range(len(xs)+1) )


n = int(input())
a = input().split()
c = []
b = list(powerset(a))
for i in range(1,len(b)):
    xor = 0
    for j in range(len(b[i])):
        xor = xor^int(a[i][j])
    c = c + [xor]
count = 0;
for i in range(len(c)-1):
    for j in range(i+1,len(c)):
        if(a[i] == a[j]):
            count += 1
